{"version":3,"sources":["Loader-compiled.js"],"names":[],"mappings":"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","file":"Loader-compiled-compiled.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class for loading of resources\n */\nvar Loader = function () {\n    /**\n     * Constructor\n     */\n    function Loader() {\n        _classCallCheck(this, Loader);\n\n        this.XHR = \"onload\" in new XMLHttpRequest() ? XMLHttpRequest : XDomainRequest;\n        this.serverAlias = \"http://localhost:8080/slot/\";\n    }\n\n    /**\n     * GET Action\n     * @param config\n     * @returns {Promise}\n     */\n\n\n    _createClass(Loader, [{\n        key: \"httpGet\",\n        value: function httpGet() {\n            var config = arguments.length <= 0 || arguments[0] === undefined ? { url: 'http://google.com' } : arguments[0];\n\n            var request = new this.XHR();\n\n            return new Promise(function (resolve, reject) {\n                request.onload = function () {\n                    resolve(request);\n                };\n                request.onerror = function () {\n                    reject(request);\n                };\n                request.open(\"GET\", config.url, true);\n                request.send();\n            });\n        }\n\n        /*****************SUGAR********************/\n\n        /**\n         * Send AJAX request to  Slot Server\n         * @param config\n         * @returns {Promise}\n         */\n\n    }, {\n        key: \"sendServerXHR\",\n        value: function sendServerXHR() {\n            var config = arguments.length <= 0 || arguments[0] === undefined ? { action: \"config\" } : arguments[0];\n\n            var serverActionUrl = this.serverAlias + config.action;\n            return this.httpGet({ url: serverActionUrl });\n        }\n    }, {\n        key: \"loadResources\",\n        value: function loadResources() {\n            console.info('BEGIN to load resources from a parsed JSON-S');\n        }\n\n        /**\n         * //@TODO In a future server init action must be created\n         */\n\n    }, {\n        key: \"init\",\n        value: function init() {\n            var me = this;\n            this.sendServerXHR({ action: 'config' }).then(function () {\n                //In case of good response get resources and start the game\n                me._getResourceConfig().then(function (data) {\n                    me.start(data);\n                });\n            }).catch(function (data) {\n                console.error('Error in connection with a server >>> ', data);\n            });\n        }\n    }, {\n        key: \"_getResourceConfig\",\n        value: function _getResourceConfig() {\n            var me = this;\n\n            return Promise.all([\n            //IMAGES\n            me.httpGet({ url: './config/images/desktop.json' }),\n            //MAIN\n            me.httpGet({ url: './config/config.json' })]);\n        }\n    }]);\n\n    return Loader;\n}();\n\nexports.default = Loader;\n\n//# sourceMappingURL=Loader-compiled.js.map"]}